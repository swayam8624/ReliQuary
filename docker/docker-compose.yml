# ReliQuary Platform - Docker Compose Configuration
# Multi-service development and testing environment

version: '3.8'

services:
  # ReliQuary Platform Service
  reliquary:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    container_name: reliquary-platform
    ports:
      - "8080:8080"
      - "2345:2345"  # Delve debugger port
    environment:
      - RELIQUARY_ENV=development
      - RELIQUARY_LOG_LEVEL=debug
      - RELIQUARY_DATABASE_URL=postgres://reliquary:secret@postgres:5432/reliquary?sslmode=disable
      - RELIQUARY_REDIS_URL=redis://redis:6379/0
      - RELIQUARY_JWT_SECRET=dev-jwt-secret-change-in-production
      - RELIQUARY_ENCRYPTION_KEY=dev-encryption-key-32-bytes-long
    volumes:
      - ../:/app/src
      - reliquary-data:/app/data
      - reliquary-logs:/app/logs
    networks:
      - reliquary-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: reliquary-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=reliquary
      - POSTGRES_USER=reliquary
      - POSTGRES_PASSWORD=secret
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - reliquary-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reliquary -d reliquary"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: reliquary-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redispassword
    volumes:
      - redis-data:/data
    networks:
      - reliquary-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: reliquary-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    networks:
      - reliquary-network
    depends_on:
      - reliquary
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: reliquary-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - reliquary-network
    depends_on:
      - reliquary

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: reliquary-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - reliquary-network
    depends_on:
      - prometheus

  # ElasticSearch for Logging
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: reliquary-elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=reliquary-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - reliquary-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kibana for Log Visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: reliquary-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - reliquary-network
    depends_on:
      elasticsearch:
        condition: service_healthy

  # Jaeger Tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: reliquary-jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - reliquary-network

  # MinIO S3-Compatible Storage
  minio:
    image: minio/minio:latest
    container_name: reliquary-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - reliquary-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Vault for Secret Management (Development)
  vault:
    image: vault:latest
    container_name: reliquary-vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root-token
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    networks:
      - reliquary-network

networks:
  reliquary-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  reliquary-data:
    driver: local
  reliquary-logs:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
  nginx-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  elasticsearch-data:
    driver: local
  minio-data:
    driver: local