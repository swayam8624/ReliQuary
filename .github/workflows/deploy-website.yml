name: Deploy Website

on:
  push:
    branches: [main]
    paths:
      - "website/**"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: reliquary/website

jobs:
  build-and-deploy:
    name: Build and Deploy Website
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for website image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/website
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push website image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./website/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to production
        run: |
          echo "Deploying website to production environment..."
          # This would typically involve:
          # 1. Connecting to your Kubernetes cluster
          # 2. Updating the deployment with the new image
          # 3. Performing a rolling update
          # 
          # Example commands (uncomment and customize for your environment):
          # echo "${{ secrets.KUBE_CONFIG_PRODUCTION }}" | base64 -d > kubeconfig
          # export KUBECONFIG=kubeconfig
          # kubectl set image deployment/reliquary-website reliquary-website=${{ env.REGISTRY }}/${{ github.repository }}/website:${{ github.sha }}
          # kubectl rollout status deployment/reliquary-website --timeout=300s
