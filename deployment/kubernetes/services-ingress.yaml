---
apiVersion: v1
kind: Service
metadata:
  name: reliquary-platform-service
  namespace: reliquary
  labels:
    app: reliquary-platform
    component: api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
spec:
  type: ClusterIP
  selector:
    app: reliquary-platform
    component: api
  ports:
    - name: http
      port: 80
      targetPort: 8000
      protocol: TCP
    - name: metrics
      port: 8080
      targetPort: 8080
      protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: reliquary-agent-service
  namespace: reliquary
  labels:
    app: reliquary-platform
    component: agents
spec:
  type: ClusterIP
  selector:
    app: reliquary-platform
    component: api
  ports:
    - name: agents
      port: 8001
      targetPort: 8001
      protocol: TCP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: reliquary-ingress
  namespace: reliquary
  labels:
    app: reliquary
    component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - api.reliquary.io
        - platform.reliquary.io
      secretName: reliquary-tls-cert
  rules:
    - host: api.reliquary.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: reliquary-platform-service
                port:
                  number: 80
    - host: platform.reliquary.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: reliquary-platform-service
                port:
                  number: 80
          - path: /agents
            pathType: Prefix
            backend:
              service:
                name: reliquary-agent-service
                port:
                  number: 8001

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: reliquary
  labels:
    app: postgresql
    component: database
spec:
  type: ClusterIP
  selector:
    app: postgresql
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: reliquary
  labels:
    app: postgresql
    component: database
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_DB
              value: "reliquary"
            - name: POSTGRES_USER
              value: "reliquary_user"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: password
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
            - name: postgresql-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - reliquary_user
                - -d
                - reliquary
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - reliquary_user
                - -d
                - reliquary
            initialDelaySeconds: 5
            periodSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: postgresql-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Gi
        storageClassName: fast-ssd

---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: reliquary
type: Opaque
data:
  password: cG9zdGdyZXNxbF9zZWN1cmVfcGFzc3dvcmQ= # base64 encoded

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: reliquary
  labels:
    app: redis
    component: cache
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - name: redis
      port: 6379
      targetPort: 6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: reliquary
  labels:
    app: redis
    component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          ports:
            - containerPort: 6379
              name: redis
          args:
            - redis-server
            - --appendonly
            - "yes"
            - --maxmemory
            - "1gb"
            - --maxmemory-policy
            - allkeys-lru
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: redis-storage
              mountPath: /data
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: reliquary
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd
